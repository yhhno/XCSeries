wcf,rabbitmq,asp.net core 分布式视频，鬼谷子，麻宁这么好的东西，我怎么能忍受它放在那里睡大觉呢？ 不赶快吸收吸收，就算装装逼也好呀，是不是？=>

情绪上怎么样? 小事情，搞的定，一步一步来，不要有过多的任务压在心头，与完事开头难的矛盾， 退缩是不存在额，没有在怕的。=》  主动的话，这些问题就可能不存在，反而有其他更好地东西出现
我是来学学习能力的，学习方法论的，不仅仅是知识？ 不是学完就万事大吉了，=》本质
这个点没有评价好坏，未来的预期也没有评价好坏？
每个东西，都要深挖，不能只是了解它的作用，
每个新东西，旧东西， 其实都不难，调整好状态，跨出第一步，步步踏实，有啥难的，一多半都是自己吓自己。
既然心理作用这么大，我们可以怎么做呢？  之前用代入感，现在用成功者，也就是未来者（儿子清华，女儿北大）， =》积极主动
来句革命性的，这些东西真的有那么重要的吗？遇到它我不想学，产生退缩，我的一切都完了吗？ 当然不是的，我当然不是整天要面对不是这些事情，这些都是实现方式之一，人需要有哲学的角度，出一套指导思想，把一切都简略的画出来，然后去填空，而目前呢，只是在做填空的那一步，就像一个没有思想的人，那就是一个不知道为什么这么做的人在做事情，此时积极的发挥不出来，消极的全部放大，导致进展不下去。 
我们是思考抽象的高层次东西，怎么可以困在低层次的范围内呢？ 对不对？

必须要有整体上的认识，才可以去理解其中的概念，名词，底层的流程，抽象的流程，抽象的概念 大局观
各个点的知识知道了，但流程是什么呢？ 如何联系在一起呢？逻辑呢？  如何才算是理解透彻？概念的透彻，流程的透彻
什么是理解透彻呢？ 就是画一张图来概括，一定要学会这种方式， 知识点都串起来了，形象生动。记忆深刻  
##note###重大问题，基础知识不系统，不全面，有缺失，而且还不清晰牢固

之前总结，反思了很多东西，为什么效果平平呢？ 很大可能是激情没有涉及，（我一定杀20个人呢，）=>起势的东西没有。=》有了起势的结果是什么？=》遇到新东西一定搞明白，事情一定要完成，还有呢？
我就是要知道，既然是学习知识，首先先学到知识，然后在学到学习方法，如何实现呢？
感觉越学越简单，越容易，他妈的就是很简单嘛。
我相信只要我持续的思考，学习，我一定能掌握一套东西，然后学任何的东西都得心应手，都透彻，然后都应用的很好《=《精神层面最重要，不然就没有行动上的启动了，更别说方法的改进了和知识点的累积了》=>有一个方针，或者标准 如成才四标准和人际关系三种关系

 解决IT企业的信息孤岛问题。=》根本就没理解这句话的含义，，不够聪明。不够，缺点啥呢 另外，我们往往仅仅着眼于运用，更进一步是实现，但是都不是从0开始，演变也不清楚，当然更别谈什么导致了演变，环境的变化，（这是基本情况的梳理） 更别谈了，种种的归类，总结，对比（这是提炼出理论，抽象的东西）

 他学习得到东西和我学习得到的东西，为啥不一样？ 是由什么造成的呢？ 我也来对比下，（当然分自学和别人教授两种情况了）
问题的出现，都是能力的欠缺或者是不足造成的额， 此时的重点是补全能力，而不是关注表面的东西，======》》》》总结能力，必须总结，这是最终的关键地方
如果我没有了学习视频，自我学习一个技术，一个领域咋办呢？

问题7：谁有什么？ 一定要搞清楚，不能乱套用，都不清晰，当然稀里糊涂的，一定要界定清楚，说明学习时方式有问题，或者总结时有问题=》引申个大问题，你遇到的各种问题是因为你不具备某种能力，如果你具备了能力，这就不是问题，而是做事的步骤而已，它就不会拦着你，此时就不知道怎么办？心态也变得不好，（为什么有了问题就心态不好呢，长久的不能解决问题造成的），出现的次数多了，当你再遇到问题时，就是一个扭曲的心态了， 扩散到一个的方方面面，那这个人就出了问题， 就在你出了问题后，你也不知道该怎么做？ 去纠正也不知道怎么做？只能头疼医头，脚疼医脚，一个问题接着一个问题，貌似解决了问题，但是心态一点都没有改变，更有可能因为问题的不断出现，导致心态越来越差
问题2：交互，只想到在powshell中去操作，而且还有可能困在这个操作中，觉得好难哦，根本就没想到交互，用C#代码交互， 这说明知识面不够，仅仅满足于当前，没有更进一步的思考。
问题8：都是承载wcf，iis中有什么不同呢？=》环境变了，其他的东西变了吗？=》要察觉到环境变了，=》然后看到底细节有哪些不同，=》webconfig有什么不同？ 我们们发现
问题9: 对哦，既然这个项目不是部署到iis上的，所有当你调试的时候，能够启动成功，说明就是运行在iis环境上，=》察觉
问题10：很多情况就是我们对整个流程不清楚的情况下，去看概念，去应用，这样是不正确的
问题5:在听到这段话的时，蒙蒙的，不知道是啥意思？不理解，  其实很简单了，你要了解这个逻辑过程，再来理解这些操作就很好理解了，就是client在message上加东西，然后service端获取。再验证client加的东西，，很多时候别人都只会说加用户名密码，不会说背后的逻辑过程，这样的话，我们不知道这个逻辑过程，就不能理解说的是什么？为什么要这么做？=>同样的道理，直接看到回绝这个请求，我们根本不理解它是怎么做的？
问题10：此时就真正理解了扩容是啥意思？ 理解了分流，单体宕机，uat升级。=》真正的理解还是需要例子的额，之前只听到加一台机器，但是听了没啥感觉。其实是没有真正落实每一步。逻辑的每一步，只是听到了大概。不知道细节
问题0：存在一个问题。把这个这节课讲到的东西，负载均衡等，都给搞清楚搞明白。就结束了，不在思考了不再考虑其他问题了。类似的问题是一次调用完成没问题，就结束了， 一个维度搞定就结束了  等等


能力的总结
1.轻松的的心态，把所有的经历都专注在你要做的事情上，其他的任何东西都不要，本身要搞清楚，搞透彻，(关键是找准主方向)，然后延伸，发散，优化，总结等（满足于当前，没有更进一步的思考。）=》发散与集中，战略上发散，战术上集中
2.一个大的工具如wcf，一个小的方面，如wcf中behavior，都需要了解知识点，概念，运作机制，然后再一步一步的走下去，这样才算是理解透彻，甚至还包括修改参数带来的影响。=》这是学习知识的问题
3.找准主方向，一切都会迎刃而解的，关键如何找到主方向呢？ =》主方向是脉络清晰的升级，更进一步。
4.要开心快乐。
5.逻辑过程+运行机制+主方向


开始本节课前，应该思考这些东西 0.积极的心态 1,这节课讲的是什么，大概概况，解决的问题，2。新知识还是旧知识 3.旧的话自己的本身的认识是什么？用到饿了那些什么样的基础知识 4.新知识的话，该怎么办？5.根据用途猜想下它的实现 6.
结束本节课后，应该思考这些东西 1.学到的知识是什么？心中是否清晰？2.自己独立思考下 3.和自己预想的有什么不一样？ 4.有什么方法或者思维或者见识可以借鉴 5.总结下

#重点#极大的自信心和态度。


问题1：调度是啥意思呢？
问题2： 我们这里知道tcp的效率大于http的，
问题3：察觉问题，遇到问题怎么办？
问题4： 方案变了，流程走一遍
问题5：画个图，举个例子，都可以帮助我们理解？ 那最好的理解方式是什么呢？
问题6:如果我在思考这个问题，我可能就会就此卡住了，完全不知道怎么去做？ 想不到监控？=》这说明基础实力不够，需要去扩充
问题7： 监控如何监控？它的逻辑过程是啥？ 重试机制。
问题9：新兴的工具，都是具有一些更完善的api实现。 有很多特性，可以帮助我们实现更好的功能？ =》但是要我们理解特性和功能的主方向和逻辑过程
问题9.1 网上很多 基于redis 基于mongodb实现的某某功能，看到如何去理解，自己如何去实现？
问题9.1 很多的术语，名词，都要搞清楚他解决了什么问题？ 原理是什么？
问题10：情况变了，常用的添加服务引用没有了，怎么办？





问题1：调度是啥意思呢？
大家好。上节课给大家讲到的是通过ngnix来实现负载均衡器 对不对，来做到一个调度，
本节课我们继续来讲负载均衡，
我们知道ngnix它是基于http的，对不对， 
问题2： 我们这里知道tcp的效率大于http的，
所以说我们做为net开发者的话，为了更高的传输效率的话呢，我们有的时候呢，可能会采用这个tcp的这种模式，更高的效率 对不对
如果说你用tcp通讯的话呢。我们的这个nginx它就不支持的了。
问题3：察觉问题，遇到问题怎么办？
那不支持该怎么办嗯？ 我们就要用其他的一些手段来实现了
问题4： 方案变了，流程走一遍
比如说我们把这个后端的所有wcf服务url地址都塞到redis中去，
然后的话呢，客户端它直接读这个redis，获取地址，  
这个也是一种手段
问题5：画个图，举个例子，都可以帮助我们理解？ 那最好的理解方式是什么呢？
比如说，我们画一张图，给大家看看  来帮助我们理解
同样的道理，一个wcf1，一个wcf2.一个redis，redis它刚好有一个set集合，可以放url是列表，就是说什么意思呢？wcf1启动的时候，做一个操作，会把这个url，塞入都redis中，同样的wcf2.  一个client，这个client它直接从redis中，去get这个url，get这个url，完了之后呢，它就可以直接和这个后端的wcf进行通讯了，，这就是这样的一个模式，
如果说你采用了这种模式的话，不管你是用http还是tcp都不受影响，这相当于直接通讯， 毕竟此时我们是和nginx是没有关系的额，这个就是强依赖于redis，对不对，那依赖于redis的话，redis可以做一个集群或者是做一个主备，
这个也可以解决我们目前的一个问题，
如果说redis挂掉的话， 主备或者集群
还有一个问题是什么？ 就是说redis的访问次数，那这个是什么意思？ 如果说你这个调用确实非常频繁，比如说你每秒qps可能是过千的， 那过千的话，可能我每秒我访问redis的次数过大，对吧，过大我们用什么手段呢？client端缓存几秒钟，对不对 那这个的话，也可以解决的，
那么第三个问题
问题6:如果我在思考这个问题，我可能就会就此卡住了，完全不知道怎么去做？ 想不到监控？=》这说明基础实力不够，需要去扩充
也就是说wcf1挂了，挂掉了之后，我client端不知道，我还是会从这个redis中去，去读到wcf1的地址，，这就是存在的一个问题，对不对，这个架构还需要一个监控，监控谁呢，就是监控url列表 
问题7： 监控如何监控？它的逻辑过程是啥？ 重试机制。
所以说我们这里还需要加一个monitor，这个monitor的话， 监控着url的存活，那它主要工作是拿这个url来定期的去做一个心跳的检测，如果你redis中的某些url已经 比如说你访问三次都挂掉了，他可能会把这个url从集合中删掉，那这个时候client端就访问不了，当然你client端也要做一些重试机制， 如果你重试了三次的话，还是访问不了，那你就要再随机抽一个url出来， 
ok，本质上还是强依赖于redis，client从redis去获取url，然后通过url去访问后端的wcf服务。

然后。我们就要去搭建一下了
我们在centos上部署下redis 因为这个redis不建议在windows上部署，官方也没有windows版本
我们通过xshell去连下，192.168.23.193 centos地址
下载redis
解压
编译，因为是c写的，所以先把源码编译下，编译之后就可以出现几个可执行文件， ok，编译是要有一定的时间的，
编译完之后，首先我们要改下配置文件， 修改两个地方
protected-mode no
#bind 127.0.0.1 注释掉，没有这个东西，redis可以监控所有的网络端口
:wq
然后启动，redis
还有一点要注意了，防火墙，如果是开的话，请关闭防火墙，
此时redis已经启动好了，
然后我们通过telnet 去连下，看看端口通不通  可以看到我们当前端口是通的，说我们redis是没有问题的 ，

接下来我们就要搞reidis驱动，
然后在wcf项目添加 StackExchange.Redis ，这样可以连接redis，操作redis 
编写好service项目
 public class HomeService : IHomeService
    {
        public string DoWork(string msg)
        {
            var info = string.Format("datetime={0} msg={1}", DateTime.Now, msg);

            Console.WriteLine(info);

            return info;
        }
    }
在wcf启动的时候，把wcf的地址发给redis
具体这个StackExchange.Redis驱动怎么使用呢？ 参阅官方 https://github.com/StackExchange/StackExchange.Redis/
官方文档有个基本使用  看看这个基本使用就可以上手了
https://stackexchange.github.io/StackExchange.Redis/Basics
一般开源的的项目，都是由详细的文档的。

 
 class Program
    {
        static void Main(string[] args)
        {
            ServiceHost host = new ServiceHost(typeof(HomeService));

            host.Open();

            //将url塞入redis中
            ConnectionMultiplexer redis = ConnectionMultiplexer.Connect("192.168.23.193:6379");

            var database = redis.GetDatabase();

            var url = host.Description.Endpoints[0].Address.ToString();

            var b = database.SetAdd("url", url);

            Console.WriteLine("url={0} 插入 redis的状态:{1}", url, b);

            Console.WriteLine("wcf启动成功！");
            Console.Read();
        }
    }


此时我们就可以把wcf项目部署到机器上去。
启动wcf项目
输出wcf的url插入成功嗯
我们怎么在redis中看呢？ 1.redis客户端，命令查看， 2.redis的UI管理工具


接下来，我们在client做操作,此时不用添加服务引用，
问题9：新兴的工具，都是具有一些更完善的api实现。 有很多特性，可以帮助我们实现更好的功能？ =》但是要我们理解特性和功能的主方向和逻辑过程
问题9.1 网上很多 基于redis 基于mongodb实现的某某功能，看到如何去理解，自己如何去实现？
问题9.1 很多的术语，名词，都要搞清楚他解决了什么问题？ 原理是什么？
问题10：情况变了，常用的添加服务引用没有了，怎么办？
直接手写代码，地址从redis中获取，而且是随机获取值 ，SetRandomMember
class Program
    {
        static void Main(string[] args)
        {
            ConnectionMultiplexer redis = ConnectionMultiplexer.Connect("192.168.23.193:6379");

            var database = redis.GetDatabase();

            for (int i = 0; i < 1000; i++)
            {
                //从set集合中获取一个随机的url地址。。 "url"  只是一个key
                // C#  HashSet
                var url = Convert.ToString(database.SetRandomMember("url"));
                
                HomeServiceClient client = new HomeServiceClient(new NetTcpBinding(), new EndpointAddress(url));

                var result = client.DoWork("hello world!");

                Console.WriteLine(result);
                System.Threading.Thread.Sleep(1000);
            }

            Console.Read();
        }
    }
运行client端，
我们发现client端调用一次，client输出一次，，而两个wcf呢 随机输出，
这就解决了我们的问题，如果说呢，你不想用这个ngnix的话，你可以redis这种模式去实现，当然这个中间件的话，你光是可以用redis，你还可以用mongodb也没有问题，

我一直在强调，wcf他没有一个好的治理框架，对不对，
在net中你只能自己实现一个类似的治理框架，
比如说，可以用到这个zookeeper，，zookeeper相当于是一个发布订阅模式的中间件，，他解决了一个什么问题嗯？ 解决了我刚才说说到的一个监控的一个问题， 就是说我zookeeper本身就自带监控的， 就是说什么意思呢？ 比如说我redis中的某个url失败了，或者挂掉了，也就是说wcf挂掉了一台，挂掉了一台之后呢，这个zookeeper自动会把这个url删掉。删掉后你client端会自动感知，相当于什么意思呢？ 有点像画的图中的monitor和redis的合体， 那么具体的细节呢、 大家可以去看下我的这个视频教程，，当然这个东西也不是一言两语能说的清楚的。
这个确实net领域的一个痛把，确实没有一个成熟的治理框架，很麻烦很麻烦


这就是两节课给大家介绍的wcf做负载均衡，包括你是用http模式还是tcp模式



一：nginx缺陷

1.使用wcf大多还是同语言内通信，所以更多采用效率更高的tcp通信。

  nginx开源版之适合http通讯。。。

2. redis 【url】

  client 从redis中获取地址。。。

二：使用redis作为urls池

 <1> 强依赖redis，那么redis可以做一个master - slave...

 <2> redis访问次数。【client端缓存几秒钟】

 <3> 还需要一个监控【urls】

三：搭建

1. https://redis.io/ redis下载  http://download.redis.io/releases/redis-4.0.2.tar.gz


$ wget http://download.redis.io/releases/redis-4.0.2.tar.gz
$ tar xzf redis-4.0.2.tar.gz
$ cd redis-4.0.2
$ make


protected-mode no
#bind 127.0.0.1


防火墙的问题，如果是开的，请关掉。。。

[root@localhost ~]# firewall-cmd --state
not running


C#驱动： StackExchange.Redis

https://github.com/StackExchange/StackExchange.Redis/

https://stackexchange.github.io/StackExchange.Redis/Basics


四：zookeeper优化 

https://item.taobao.com/item.htm?id=559102500362

https://item.taobao.com/item.htm?spm=a1z10.3-c.w4002-14255538821.17.28d7554bRaX53w&id=547672364111