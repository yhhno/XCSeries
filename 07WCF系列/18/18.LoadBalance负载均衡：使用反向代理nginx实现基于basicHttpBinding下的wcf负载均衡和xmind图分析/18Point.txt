wcf,rabbitmq,asp.net core 分布式视频，鬼谷子，麻宁这么好的东西，我怎么能忍受它放在那里睡大觉呢？ 不赶快吸收吸收，就算装装逼也好呀，是不是？=>

情绪上怎么样? 小事情，搞的定，一步一步来，不要有过多的任务压在心头，与完事开头难的矛盾， 退缩是不存在额，没有在怕的。=》  主动的话，这些问题就可能不存在，反而有其他更好地东西出现
我是来学学习能力的，学习方法论的，不仅仅是知识？ 不是学完就万事大吉了，=》本质
这个点没有评价好坏，未来的预期也没有评价好坏？
每个东西，都要深挖，不能只是了解它的作用，
每个新东西，旧东西， 其实都不难，调整好状态，跨出第一步，步步踏实，有啥难的，一多半都是自己吓自己。
既然心理作用这么大，我们可以怎么做呢？  之前用代入感，现在用成功者，也就是未来者（儿子清华，女儿北大）， =》积极主动
来句革命性的，这些东西真的有那么重要的吗？遇到它我不想学，产生退缩，我的一切都完了吗？ 当然不是的，我当然不是整天要面对不是这些事情，这些都是实现方式之一，人需要有哲学的角度，出一套指导思想，把一切都简略的画出来，然后去填空，而目前呢，只是在做填空的那一步，就像一个没有思想的人，那就是一个不知道为什么这么做的人在做事情，此时积极的发挥不出来，消极的全部放大，导致进展不下去。 
我们是思考抽象的高层次东西，怎么可以困在低层次的范围内呢？ 对不对？

必须要有整体上的认识，才可以去理解其中的概念，名词，底层的流程，抽象的流程，抽象的概念 大局观
各个点的知识知道了，但流程是什么呢？ 如何联系在一起呢？逻辑呢？  如何才算是理解透彻？概念的透彻，流程的透彻
什么是理解透彻呢？ 就是画一张图来概括，一定要学会这种方式， 知识点都串起来了，形象生动。记忆深刻  
##note###重大问题，基础知识不系统，不全面，有缺失，而且还不清晰牢固

之前总结，反思了很多东西，为什么效果平平呢？ 很大可能是激情没有涉及，（我一定杀20个人呢，）=>起势的东西没有。=》有了起势的结果是什么？=》遇到新东西一定搞明白，事情一定要完成，还有呢？
我就是要知道，既然是学习知识，首先先学到知识，然后在学到学习方法，如何实现呢？
感觉越学越简单，越容易，他妈的就是很简单嘛。
我相信只要我持续的思考，学习，我一定能掌握一套东西，然后学任何的东西都得心应手，都透彻，然后都应用的很好《=《精神层面最重要，不然就没有行动上的启动了，更别说方法的改进了和知识点的累积了》=>有一个方针，或者标准 如成才四标准和人际关系三种关系

 解决IT企业的信息孤岛问题。=》根本就没理解这句话的含义，，不够聪明。不够，缺点啥呢 另外，我们往往仅仅着眼于运用，更进一步是实现，但是都不是从0开始，演变也不清楚，当然更别谈什么导致了演变，环境的变化，（这是基本情况的梳理） 更别谈了，种种的归类，总结，对比（这是提炼出理论，抽象的东西）

 他学习得到东西和我学习得到的东西，为啥不一样？ 是由什么造成的呢？ 我也来对比下，（当然分自学和别人教授两种情况了）
问题的出现，都是能力的欠缺或者是不足造成的额， 此时的重点是补全能力，而不是关注表面的东西，======》》》》总结能力，必须总结，这是最终的关键地方
如果我没有了学习视频，自我学习一个技术，一个领域咋办呢？

问题7：谁有什么？ 一定要搞清楚，不能乱套用，都不清晰，当然稀里糊涂的，一定要界定清楚，说明学习时方式有问题，或者总结时有问题=》引申个大问题，你遇到的各种问题是因为你不具备某种能力，如果你具备了能力，这就不是问题，而是做事的步骤而已，它就不会拦着你，此时就不知道怎么办？心态也变得不好，（为什么有了问题就心态不好呢，长久的不能解决问题造成的），出现的次数多了，当你再遇到问题时，就是一个扭曲的心态了， 扩散到一个的方方面面，那这个人就出了问题， 就在你出了问题后，你也不知道该怎么做？ 去纠正也不知道怎么做？只能头疼医头，脚疼医脚，一个问题接着一个问题，貌似解决了问题，但是心态一点都没有改变，更有可能因为问题的不断出现，导致心态越来越差
问题2：交互，只想到在powshell中去操作，而且还有可能困在这个操作中，觉得好难哦，根本就没想到交互，用C#代码交互， 这说明知识面不够，仅仅满足于当前，没有更进一步的思考。
问题8：都是承载wcf，iis中有什么不同呢？=》环境变了，其他的东西变了吗？=》要察觉到环境变了，=》然后看到底细节有哪些不同，=》webconfig有什么不同？ 我们们发现
问题9: 对哦，既然这个项目不是部署到iis上的，所有当你调试的时候，能够启动成功，说明就是运行在iis环境上，=》察觉
问题10：很多情况就是我们对整个流程不清楚的情况下，去看概念，去应用，这样是不正确的
问题5:在听到这段话的时，蒙蒙的，不知道是啥意思？不理解，  其实很简单了，你要了解这个逻辑过程，再来理解这些操作就很好理解了，就是client在message上加东西，然后service端获取。再验证client加的东西，，很多时候别人都只会说加用户名密码，不会说背后的逻辑过程，这样的话，我们不知道这个逻辑过程，就不能理解说的是什么？为什么要这么做？=>同样的道理，直接看到回绝这个请求，我们根本不理解它是怎么做的？
问题10：此时就真正理解了扩容是啥意思？ 理解了分流，单体宕机，uat升级。=》真正的理解还是需要例子的额，之前只听到加一台机器，但是听了没啥感觉。其实是没有真正落实每一步。逻辑的每一步，只是听到了大概。不知道细节
问题0：存在一个问题。把这个这节课讲到的东西，负载均衡等，都给搞清楚搞明白。就结束了，不在思考了不再考虑其他问题了。类似的问题是一次调用完成没问题，就结束了， 一个维度搞定就结束了  等等

能力的总结
1.轻松的的心态，把所有的经历都专注在你要做的事情上，其他的任何东西都不要，本身要搞清楚，搞透彻，(关键是找准主方向)，然后延伸，发散，优化，总结等（满足于当前，没有更进一步的思考。）=》发散与集中，战略上发散，战术上集中
2.一个大的工具如wcf，一个小的方面，如wcf中behavior，都需要了解知识点，概念，运作机制，然后再一步一步的走下去，这样才算是理解透彻，甚至还包括修改参数带来的影响。=》这是学习知识的问题
3.找准主方向，一切都会迎刃而解的，关键如何找到主方向呢？ =》主方向是脉络清晰的升级，更进一步。
4.要开心快乐。
5.逻辑过程+运行机制+主方向


开始本节课前，应该思考这些东西 0.积极的心态 1,这节课讲的是什么，大概概况，解决的问题，2。新知识还是旧知识 3.旧的话自己的本身的认识是什么？用到饿了那些什么样的基础知识 4.新知识的话，该怎么办？5.根据用途猜想下它的实现 6.
结束本节课后，应该思考这些东西 1.学到的知识是什么？心中是否清晰？2.自己独立思考下 3.和自己预想的有什么不一样？ 4.有什么方法或者思维或者见识可以借鉴 5.总结下

#重点#极大的自信心和态度。


问题0：这算是一个工具的使用问题？ 思路方式啥的都要转变，不用再套用学技术时的思路了
问题1: 讲到负载均衡，讲到分布式治理框架，讲到spring cloud，dubbo  不要慌 一个一个搞明白啥意思，细节搞不明白，作用总能搞明白把，
问题2:分布式服务框架，除了分布式技术 还包括服务治理框架？
问题3：对比，归纳出自己的不足
问题3.1 有了不足，然后呢？ 沮丧，消沉，不对吧，想办法解决
问题4:分流 宕机 单体，自动化升级。Uat 新概念 
问题5：之前负载均衡也了解了，为啥没想下如何去实现？=》态度问题，不能存在应付，完成的心态，=》不对，其实是对负载均衡还有没有理解，当时只是照着做了一遍。=》主方向没有找到，
问题6：我要学的是linux环境的软件安装和使用，而不是一步一步跟着他学安装ngnix
问题7： 重新copy了额，就要重新走下逻辑过程，此处就是没有走，但是在出现问题的时候走也可以，不能出来问题就没了思路。
问题8:主方向是啥，就是啥是负载均衡器，而不是这些步骤， 复杂就是起到一个转发的作用，就是也可以这样说吗 之前是一个对一个，现在是一个对多个，中间的过程由负载均衡器去完成，对client端就是一个=》缺少主方向，暂时不要想负载均衡器内部是如何实现的，确定主方向
问题9：走一下逻辑过程是可以想得到的。 但是我们如果client的配置文件是固定的话，就失去了负载均衡的意思，应该是这样的，client每发出一个请求，这个请求在wcf1和wcf2中去选择。但这只是添加服务引用时的负载均衡，我们要的是调用时的负载均衡。=》缺少逻辑过程
问题10：此时就真正理解了扩容是啥意思？ 理解了分流，单体宕机，uat升级。=》真正的理解还是需要例子的额，之前只听到加一台机器，但是听了没啥感觉。其实是没有真正落实每一步。逻辑的每一步，只是听到了大概。不知道细节


问题0：存在一个问题。把这个这节课讲到的东西，负载均衡等，都给搞清楚搞明白。就结束了，不在思考了不再考虑其他问题了。类似的问题是一次调用完成没问题，就结束了， 一个维度搞定就结束了  等等
问题0：这算是一个工具的使用问题？ 思路方式啥的都要转变，不用再套用学技术时的思路了  对呀i，就是主方向也不同了
问题1: 讲到负载均衡，讲到分布式治理框架，讲到spring cloud，dubbo  不要慌 一个一个搞明白啥意思，细节搞不明白，作用总能搞明白把，
大家好，这节课呢我们就开始来讲wcf的负载均衡 
ok，在讲负载均衡之前，可能我就要吐槽一下了。为什么这么讲
问题2:分布式服务框架，除了分布式技术 还包括服务治理框架？
因为wcf的话，既然它作为一个分布式服务框架，对不对，作为一个net系统下的一个整合框架，对不对，但是你整合就整合，你不能说你光整合了分布式技术，却没有一个治理框架，对不对，
这个的话其实在java领域下，有哪些呢？
有这个现在很火的 微服务的spring cloud 还有比较年代久远的dubbo， 这个的话呢它都是一个服务治理框架，包括很多的，比如说服务限流，降级，服务发现，服务注册，监控等等
问题3：对比，归纳出自己的不足
这些在wcf中基本上是没有的，，所以说的话呢，这个就比较尴尬了，
这些在net体系下是没有的，既然wcf想做一个整合框架，那么你应该要出一个治理框架，对不对，否则你和java领域下的这些微服务框架 已经是相差的不止一点点了，
ok，既然的话呢 微软没有自家的一些治理框架，当然有是有一点的，只是跑在它的云上的，
好玩的东西，都是微软云上，
所以说，我们云下玩不了。 很麻烦
这个是一个大环境所致， 我们也没办法解决
问题3.1 有了不足，然后呢？ 沮丧，消沉，不对吧，想办法解决
所以说我们可以通过其他的一些手段来实现wcf的集群
ok，集群的好处呢
比如说在我们的项目中也使用到了。
问题4:分流 宕机 单体，自动化升级。Uat 新概念 
<1>. 分流请求流量

<2>. 避免单体宕机

<3>. 方便升级  【uat - pro】
分流请求流量，你client端的请求，我可以分流过来，比如说呢 我wcf 5台 10台可以起到一个分流的作用，10台wcf来分摊你前端的流量
然后，避免单体宕机，也就是说你10个wcf，我down一个没关系，我还有9个可以对外服务，对吧，
然后，方便升级，那方便升级的话呢，其实我们有一个uat环境，最高的就是一个生产环境，对吧， uat环境的话呢，相当于我生产上有10台机器， 我拉一台下来，这就是uat环境，这个台机器就属于uat，这样的话方便我们自动化升级，
然后的话，场景 是什么场景呢？
我们单独为百草味做了这样的一个集群，
不到半年时间，有5000w订单量 ，ok，这么大的一个订单量的话， 我们采用的是120g大内存，大概占了80g的数据， 80g的数据也就是80g的内存，最快的话，我们采用单体查询，全内存查询，放在一台机器上，这台机器大概有80g的数据，都在内存上，
如果大家看过我多线程  可能大家有印象， 那时候我们接到的最大的客户是百雀羚，他大概是1500w的数据，百草味直接秒杀它， 因为毕竟类目不一样吗。ok，那时候我们大概能优化到10s以内，，那这个5000w的量确实太大了额，所以说我们继续采用更大的机器去承载，当然的话， 这个单体最终有爆掉的时候，目前我们还没有遇到，
ok，下一步的话呢，只能是采用spark，spark去算的话呢，时间大概在一分钟左右，毕竟的话呢，我们以后的daju是要改的，因为毕竟spark的话呢，它是采用的hadoop分布式存储，ok，必然你会涉及到多机器嘛， 比如说我一个非常简单的一个，就是计算总金额的25%的客户，那其实这是一个相对来说，比较复杂一点的条件，我们首先的话，要做什么呢，要做到每个人的在百草味的交易总额，要找出来，总额找出来之后呢， 如果说你按照常规的做法，你还有对它进行排序，对吧，然后取出25%，当然的话呢，这个我们还可以用其他的一些算法来实现，ok，最终的话呢，我们最终大概是20s到30s。 这个就是一个场景的问题，我们用到的是  大概我们用3台wcf来放80g的数据，也就是说3台都是80g， 方便我们实时去升级， 也避免一个宕机，，然后是一个流量的分流。
ok，所以说的话呢，我们现在开始教大家怎么去搭建。

问题5：之前负载均衡也了解了，为啥没想下如何去实现？=》态度问题，不能存在应付，完成的心态，=》不对，其实是对负载均衡还有没有理解，当时只是照着做了一遍。=》主方向没有找到，
搭建的话，我们前端采用的是nginx。 然后配上一个wcf。
比如说我们现在是一个nginx，后面是wcf1，然后再来一个wcf2，后面是wcf3.，这样的话，我们是做一个分流，我们搭建的话呢，我们采用两个wcf，wcf1和wcf2都是windows环境 然后ngnix采用的是centos环境，然后是client来请求nignx， nignx会把这个请求打给后端的两个wcf。这个就相当于是一个分流的作用了， wcf1的ip地址是192.168.23.194， wcf2的ip地址是192.168.23.195，ngnix的ip地址是192.168.23.194， client的ip地址是192.168.23.1。架构是这样的一个架构，大家心里有数。
接下来，我们就要做什么呢？ 一步一步来
问题6：我要学的是linux环境的软件安装和使用，而不是一步一步跟着他学安装ngnix
第一步下载nginx，www.ngnix.org/en/download.html  大家可以下载最新的版本，我们采用的是centos，不要用windows
现在完了之后，我们就要做什么呢？ 这个地方我用xshell去连下，
我们来演示下，创建一个文件夹apps
下载
解压
安装 安装之前大家要知道它还有一些依赖项。 因为他是一个c语言写的额， 先安装依赖项，否则你可能会安装不上。
然后是三板斧安装 就是三个步骤嘛。
./configure --prefix=/usr/aapps/nginx  检查它的运行环境，最终它会生成一个ngnix的一个目录
make && make install
安装完了之后，我们就要修改配置文件 就是nginx.conf 文件
我们通过vim，去找下，
这个文件怎么改？因为我们要做wcf的配置到这个配置文件里去，
这时候就配置完了。
配置完了额，我们接下来，该怎么做呢？
启动ngnix
我们发现出错了，也就是我们刚才，copy的时候，copy的有问题，
我们可以到ui环境下，去修改，
修改完成后，启动，
启动成功后， 启动wcf1和wcf2
此时我们地址栏输入192.168.23.193，看看有没被负载均衡到。
报错了。
问题7： 重新copy了额，就要重新走下逻辑过程，此处就是没有走，但是在出现问题的时候走也可以，不能出来问题就没了思路。
因为刚才重新copy了配置文件，有些东西没有修改

此时我们在一次 在地址栏输入192.168.23.193，看看有没被负载均衡到。也就是实现了分流

这说明我们ngnix已经配置成功了，
接下来我们要做什么呢？
问题8:主方向是啥，就是啥是负载均衡器，而不是这些步骤， 复杂就是起到一个转发的作用，就是也可以这样说吗 之前是一个对一个，现在是一个对多个，中间的过程由负载均衡器去完成，对client端就是一个=》缺少主方向，暂时不要想负载均衡器内部是如何实现的，确定主方向
问题9：走一下逻辑过程是可以想得到的。 但是我们如果client的配置文件是固定的话，就失去了负载均衡的意思，应该是这样的，client每发出一个请求，这个请求在wcf1和wcf2中去选择。但这只是添加服务引用时的负载均衡，我们要的是调用时的负载均衡。=》缺少逻辑过程
client添加服务引用，地址是ngnix地址。更新完了之后，我们看下配置文件， 服务地址是194或者195的wcf地址，=》但这只是添加服务引用时的负载均衡，我们要的是调用时的负载均衡。
所以修改client的配置文件 改成http://192.168.23.193
 <client>
      <endpoint address="http://192.168.23.193/HomeService" binding="basicHttpBinding"
        bindingConfiguration="BasicHttpBinding_IHomeService" contract="ServiceReference1.IHomeService"
        name="BasicHttpBinding_IHomeService" />
    </client>
我们编写client调用代码
class Program
    {
        static void Main(string[] args)
        {
            for (int i = 0; i < 1000; i++)
            {
                HomeServiceClient client = new HomeServiceClient();

                client.DoWork("hello world!");

                System.Threading.Thread.Sleep(1000);
            }

            Console.Read();
        }
    }
理论上是，client每1s调用一次，这个请求会被ngnix转发给某个wcf，随机的， 这样求起到了分流的作用。

如果我们把某一台wcf1关了，所有的请求都会到wcf2的，服务不宕机，起到了避免单体宕机的作用。，此时还可以下线一台机器进行升级，

问题10：此时就真正理解了扩容是啥意思？ 理解了分流，单体宕机，uat升级。=》真正的理解还是需要例子的额，之前只听到加一台机器，但是听了没啥感觉。其实是没有真正落实每一步。逻辑的每一步，只是听到了大概。不知道细节
这个相当于是一个负载均衡的一个作用，
ok，这个就是本节课给大家介绍的所有内容， 主要大家理解这张图，用ngnix来做负载均衡器，当然，这样的话呢、你wcf可以扩容的10台，20台，100台都没有问题，只要你用ngnix去负载，





一：WCF集群

.net系统下一个整合框架：【治理框架】

java 【spring cloud  dubbo】 服务限流，降低，服务发现，服务注册，监控。。。

好玩的东西都在微软云上。。。。

1. 好处

<1>. 分流请求流量

<2>. 避免单体宕机

<3>. 方便升级  【uat - pro】

2.场景：

百草味旗舰店 （不到半年）5000w订单量，120G大内存，80G数据，单体全内存查询，优化算法，速度最快 （20s-30s) 。。。

【多线程】 百雀羚 1500w   10s一下

spark 【hadoop分布式存储】

计算总金额的25%的客户 【】

hash算法O（1），不敢用，直接用数组代替hash。

3. 如何搭建  nginx

《1》 下载nginx  http://nginx.org/en/download.html

《2》 依赖项： http://www.linuxidc.com/Linux/2016-09/134907.htm

 《3》 wget http://nginx.org/download/nginx-1.13.6.tar.gz
  
     tar -xzvf  nginx-1.13.6.tar.gz

     ./configure --prefix=/usr/aapps/nginx && make && make install

《4》 vim nginx.conf 

[root@localhost apps]# ls
nginx  nginx-1.13.6  nginx-1.13.6.tar.gz


http://www.cnblogs.com/huangxincheng/p/7707830.html
  