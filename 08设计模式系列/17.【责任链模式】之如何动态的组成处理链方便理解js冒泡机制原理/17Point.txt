设计模式,也就是设计过程中的解决问题,设计的套路总结? 怎么去设计?怎么去解决? 这是个问题? 是个核心能力?  需要训练?  要有大前提? 要有环境?
思路一步一步都记下来.
1.正确分析问题思路:没有查看类图=> 类图是什么?=>一个cd文件=>1.附加个现成的cd文件=>不识别=>2.看是否能添加cd文件=>发现没有=>通过方式1和方式2 应该可以判断出是template缺失?=>添加即可====> 最终定位为template
2.错误的分析问题方式:流于表面的瞎百度, 根本没思考.就困在这里,毫无有用的瞎转悠=> 错误归错误,不要影响积极的情绪=====>最终定位为方式或思路错误,赶快调整.
3.最重要的是方式错误时和情绪时的调整. 也就是心理素质.
4.分析步骤:	类似于while?如何理解? while(true)  什么是true条件? 肯定不是console.writeline(). 那只能是movenext()=> while(movenext()){console.writeline(current).};    movenext如何实现的恩?  其实很简单了? 历史没有真相,只残存一个道理.. movenext的道理是什么?
5.有时关注点放错了,困在某个点,,有时是没深入分析,困在表面
6.概念一知半解,流程不深究没概念. 逻辑推理分析没形成习惯. 也没有正确的模型.
7.我从来不觉得我比别人差
8.进入状态比较慢, 
9.出了问题,,残存什么样的道理?  做啥动作? 为啥目的? 用啥材料? 用啥逻辑? 有啥方式?
10.怀疑一切,或者任何事我也可以做.
11.有点不认真,没有边学边思考,边推理. 效率不高,还返工,,,你有多成功,取决于你有多渴望成功.
12.目的是啥? 这就是此时的主体? 主体都搞不清楚? 容易困于某个点,此时的监控,感应通知等 ==>先找到主体,有个整体的认识,在去扣细节和辅助. 观察者
13.带着(目的是创建对象)的前提来看问题? 一切为了创建,  肯定有由创建过程. 也可以顺着目的,逻辑推理 每一步该怎么做?   建造者
14.抽象的概念描述不好理解,一定要结合实例 :一个复杂的对象(房子)由很多的子部件(黄沙，瓷砖，水泥，青砖)的组成，子部件(黄沙的品牌)是多变，但是子部件组成的流程确实不易变。 流程是啥呢?
15.和自己理解的备忘录模式,差的太多了,说明了什么? 分析有问题? 映射有问题? 理解也有问题? 逻辑推理有问题?==>这里不解决,也就没思路,,没思路搞个屁.
16.完整过程是怎样呢? 肯定要顺一遍.  不然咋交逻辑推理? 不能只关注一个点.  全过程.
17.我以为撤销是在执行后撤销,第一感觉是这样, 说明什么? 对事情根本没有本质的认识? 或者很多认识都是错的,还有其实内心是阻止自己深入的,觉得做不到? 也不觉得做不到有什么不好? 深入都没深入,更别谈什么能不能了.==>我能,必须前进.
18.容易懒惰,容易没激情,容易不积极,容易放弃,容易不调整.心态不乐观.容易没渴望


一：责任链模式 
责任,对谁负责任,对谁进行处理.广义上是一种行为, 链呢?从开发角度看,是是一种链表,组合到一块就是行为链表

责任： 行为 多个行为?

链：   链表   如何形成链表呢? 和数据结构中的链表有什么不一样?  这说法就不对,  链表的出现时为了解决特定问题? 此处只是问题的形式或规模不一样. 原理都一样


行为链表

延伸一点:行为的请求(一个请求)和行为的处理(多个行为)进行了解耦。。。如何理解解耦呢? 是不是要加控制呀?  和状态模式有啥不一样 与命令模式有啥不一样?
重点元素 一个请求,多个行为.

将众多的行为串成一个链表。然后请求可以从这个链表进行流转，这个方式会让链表中的各个节点都有可能处理到当前的请求。。。这话有问题,容易歧义,不是一个请求,众多行为都有可能执行,而是针对不同的请求,众多行为都有可能执行,不属于自己的范围咋处理.  是不是在这个链上只能被执行一次? 还是多次?  处理可以理解为过滤 筛选?
重点流程: 请求会在这个链表中进行流转? 如何流转? 如何组成链表? 

链表我可以按照我的要求随机组合。。。 如何理解? 也就是链表的控制权在我这里, 哈哈  有主动权

举个例子来理解
二：请假 【生活中的例子】

请三天假： 直接给我们[开发经理]请一下就ok了。。。

请七天假： 只能到 研发经理 那里请假

请十天假： 部门总监 【事业部老大】 v8级别


开发经理  ->  研发经理 -> 事业部老大  也就是说请假的这个请求,到这个链表上去过滤 去筛选?  =>你看看新名字,新角度


state= 3,7,10 


三：js bubble 【js冒泡】 可以被执行多次,   啥时候形成的链表呢?

html 

   body

     div   [click]  【cancelbubble】

       a <a onclick="event.Cancelbubble=true">

div上有个click事件, a标签触发后,会向上冒泡, 触发click事件,  但click事件不应该被触发,此时应该阻止冒泡.  上层的div会判断event.Cancelbubble是否为true,为true的话,就不触发. 猜想默认为false
四：模型
责任链模式 样板 步骤
1.定义一个抽象类AbstractHandler,添加handler属性,添加表示行为处理函数的抽象方法Request,添加SetHandler
2.定义ConcreteHandler和ConcreteHandler2和ConcreteHandler3类,继承抽象类abstractHandler,并实现各自的Request方法.
3.在main函数中调用.
 static void Main(string[] args)
        {
            //1.实例化具体的Handler
            AbstractHandler handler1 = new ConcreteHandler();
            AbstractHandler handler2 = new ConcreteHandler2();
            AbstractHandler handler3 = new ConcreteHandler3();

            ////2.调用SetHandler,形成链表
            //handler1.SetHandler(handler2);
            //handler2.SetHandler(handler3);

            //自由的组合. 自由的新增 修改
            handler1.SetHandler(handler3);

            //3.发送请求.  有时发送请求,并不一定真的有请求这个实体在.
            handler1.Request(10);

            Console.Read();
        }

五：我们发现很多handler，我们都可以随机的组合。。。


    这种链表可以根据需求动态的增加或者减少。  如何理解动态的增加? 动态的 是不是不是死的? 可以改变的? 是不是CRUD的控制权在我? 给我的不是一个固定的值,而是我可以调用方法来设置这个值? 哈哈



1.责任链模式  本质是啥? 不要死记样例
2.得到什么启示呢? 
3.有没充分理解?



   1. 0是什么状态? 怎么演绎? 1是什么状态? 过程遇到什么问题? 有什么样的解决方案?  VS 有什么方案? 解决什么问题?   在正常的流程的大前提下,去看问题, 关注点不能本末倒置.  脱离环境 咋理解呢?  目的是啥?
  2.如何演绎的? 第一步是啥?新需求? 如何执行新需求? 有什么问题? 对应有什么解决办法? 解决方法有没新名词? 解释新名词? 执行接下来的一步 ... 重复执行? 这需要细节?
  3.要搞清楚的东西:
		1.多调试,看看顺序执行,分支,跳转,循环等执行路径  多重分支,多级分支, 
		2.同步,异步执行路径  特别是异步没有wait时.
		3.锁执行路径
		为什么要弄清楚呢? 大体情况要了解,避免处于盲区,或者关注点错误.或者没有大前提.
4.如何理清脉络? 有哪些关键点? 如何做到这些关键点? 这些关键点是为了达到什么样的目的? 关键点如何串起来.? 也就是说小目的串起来,达到最终目的?做事是为了达到某些目的? 出了问题?也就是目的没达到,也就是做的事有问题. 先找到主体,有个整体的认识,在去扣细节和辅助.
5.避免,毫无目的,毫无主线,无前提,无脉络 . 毫无关键点 也没主动. 瞎转,当然心中没数了,生活中也是如此
6.分析是如何分析的呢? 从oo角度分析, 无非一些类,然后交互. 还有流程的
7.分解很重要.  如何分解呢?  映射其实就是分解? 设计算法也是分解? 但分解到底是啥呢?
8. 抽象? 如何抽象?
9.分析问题不够深入,不能猜想,不能逻辑推理,容易卡壳,特别是遇到新概念,不懂的名词,卡壳后不会调整,学习不够本质,不能活学活用,容易只记住案例,当遇到类似的时候,不能联想, 举一反三.