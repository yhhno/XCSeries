设计模式,也就是设计过程中的解决问题,设计的套路总结? 怎么去设计?怎么去解决? 这是个问题? 是个核心能力?  需要训练?  要有大前提? 要有环境?
思路一步一步都记下来.
1.正确分析问题思路:没有查看类图=> 类图是什么?=>一个cd文件=>1.附加个现成的cd文件=>不识别=>2.看是否能添加cd文件=>发现没有=>通过方式1和方式2 应该可以判断出是template缺失?=>添加即可====> 最终定位为template
2.错误的分析问题方式:流于表面的瞎百度, 根本没思考.就困在这里,毫无有用的瞎转悠=> 错误归错误,不要影响积极的情绪=====>最终定位为方式或思路错误,赶快调整.
3.最重要的是方式错误时和情绪时的调整. 也就是心理素质.
4.分析步骤:	类似于while?如何理解? while(true)  什么是true条件? 肯定不是console.writeline(). 那只能是movenext()=> while(movenext()){console.writeline(current).};    movenext如何实现的恩?  其实很简单了? 历史没有真相,只残存一个道理.. movenext的道理是什么?
5.有时关注点放错了,困在某个点,,有时是没深入分析,困在表面
6.概念一知半解,流程不深究没概念. 逻辑推理分析没形成习惯. 也没有正确的模型.
7.我从来不觉得我比别人差
8.进入状态比较慢, 
9.出了问题,,残存什么样的道理?  做啥动作? 为啥目的? 用啥材料? 用啥逻辑? 有啥方式?
10.怀疑一切,或者任何事我也可以做.
11.有点不认真,没有边学边思考,边推理. 效率不高,还返工,,,你有多成功,取决于你有多渴望成功.
12.目的是啥? 这就是此时的主体? 主体都搞不清楚? 容易困于某个点,此时的监控,感应通知等 ==>先找到主体,有个整体的认识,在去扣细节和辅助. 观察者
13.带着(目的是创建对象)的前提来看问题? 一切为了创建,  肯定有由创建过程. 也可以顺着目的,逻辑推理 每一步该怎么做?   建造者
14.抽象的概念描述不好理解,一定要结合实例 :一个复杂的对象(房子)由很多的子部件(黄沙，瓷砖，水泥，青砖)的组成，子部件(黄沙的品牌)是多变，但是子部件组成的流程确实不易变。 流程是啥呢?
15.和自己理解的备忘录模式,差的太多了,说明了什么? 分析有问题? 映射有问题? 理解也有问题? 逻辑推理有问题?==>这里不解决,也就没思路,,没思路搞个屁.
16.完整过程是怎样呢? 肯定要顺一遍.  不然咋交逻辑推理? 不能只关注一个点.  全过程.


完整过程是怎样呢? 肯定要顺一遍.
一：状态模式 状态状态 肯定与状态有关  这好像是与执行流程有关的模式   不确定, 总结的重要

1. 定义:根据状态的不同，执行不同的行为。。。 至少有状态的切换,和对应状态的行为的执行,   完整过程是怎样呢? 类似分支 

   开关： 状态:火线和零线断开      行为:灯灭掉了。。。

          状态:火线和零线接起来了  行为:灯亮了。。。

  状态切换 是一个轮回  开 -> 关 -> 开  

2. 0-6  深夜了，注意休息

   6-12  上午好

  12-14  中午好

  14-18  下午好

  18-24  晚上好

    状态切换 是一个轮回  开 -> 关 -> 开  

   如果我不用状态模式，会怎么样？？？ 
如果用普通的方式，会写5个ifelse？？？ ifelse不好维护。。。维护啥? 维护是啥?CRUD  【违背开闭原则】 如果有个新条件,又要加if 要疯了.  不好,好优化  怎么优化呢?  状态模式

既然是ifelse的替换,那肯定ifelse有的,状态模式必须有, 是以oo的角度来实现的, 有哪些类.有哪些交互,有哪些流程.
开始,结束,顺序执行,状态的判断,不符合执行下一个? 如何切换? 如何重复直至结束? 如何结束.?

二：状态模式的样板

原理: 将每一个状态都升级成一个类，类中的定义一个行为，这个行为就是当前状态所应该执行的操作。。。(都一样,肯定有个抽象类或者接口, 抽象的能力)

先自己想想如何实现呢:

状态模式步骤 样板demo
1.定义一个抽象类AbstractState,添加表示当前状态要执行的操作的方法Hanlder.
2.定义表示3个不同状态的类:ConcreteState1类和ConcreteState2类和ConcreteState3类,继承抽象类AbstractState类,并实现表示各自的行为的Hanlder方法
3.定义一个表示状态传递的类:Context类,添加state属性和Request方法
4. 在main函数中调用.
5. 状态是如何开始的,如何传递的,行为又是如何执行的.又如何结束. ==>逻辑推理.


三：代码实现以下qq邮箱的一个问候语

原始代码很多的ifelse

面对需求变更，你好更加ifelse，很容易搞错。。。

转态的初识状态,初识状态的的执行,执行包括 当前状态的执行的判断,符合执行,不符合切换下一个状态, 如此重复循环


1.状态模式
2.分析的重要性.



  1. 0是什么状态? 怎么演绎? 1是什么状态? 过程遇到什么问题? 有什么样的解决方案?  VS 有什么方案? 解决什么问题?   在正常的流程的大前提下,去看问题, 关注点不能本末倒置.  脱离环境 咋理解呢?  目的是啥?
  2.如何演绎的? 第一步是啥?新需求? 如何执行新需求? 有什么问题? 对应有什么解决办法? 解决方法有没新名词? 解释新名词? 执行接下来的一步 ... 重复执行? 这需要细节?
  3.要搞清楚的东西:
		1.多调试,看看顺序执行,分支,跳转,循环等执行路径  多重分支,多级分支, 
		2.同步,异步执行路径  特别是异步没有wait时.
		3.锁执行路径
		为什么要弄清楚呢? 大体情况要了解,避免处于盲区,或者关注点错误.或者没有大前提.
4.如何理清脉络? 有哪些关键点? 如何做到这些关键点? 这些关键点是为了达到什么样的目的? 关键点如何串起来.? 也就是说小目的串起来,达到最终目的?做事是为了达到某些目的? 出了问题?也就是目的没达到,也就是做的事有问题. 先找到主体,有个整体的认识,在去扣细节和辅助.
5.避免,毫无目的,毫无主线,无前提,无脉络 . 毫无关键点 也没主动. 瞎转,当然心中没数了,生活中也是如此
6.分析是如何分析的呢? 从oo角度分析, 无非一些类,然后交互. 还有流程的