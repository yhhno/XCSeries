设计模式,也就是设计过程中的解决问题,设计的套路总结? 怎么去设计?怎么去解决? 这是个问题? 是个核心能力?  需要训练?  要有大前提? 要有环境?
思路一步一步都记下来.
1.正确分析问题思路:没有查看类图=> 类图是什么?=>一个cd文件=>1.附加个现成的cd文件=>不识别=>2.看是否能添加cd文件=>发现没有=>通过方式1和方式2 应该可以判断出是template缺失?=>添加即可====> 最终定位为template
2.错误的分析问题方式:流于表面的瞎百度, 根本没思考.就困在这里,毫无有用的瞎转悠=> 错误归错误,不要影响积极的情绪=====>最终定位为方式或思路错误,赶快调整.
3.最重要的是方式错误时和情绪时的调整. 也就是心理素质.
4.分析步骤:	类似于while?如何理解? while(true)  什么是true条件? 肯定不是console.writeline(). 那只能是movenext()=> while(movenext()){console.writeline(current).};    movenext如何实现的恩?  其实很简单了? 历史没有真相,只残存一个道理.. movenext的道理是什么?
5.有时关注点放错了,困在某个点,,有时是没深入分析,困在表面
6.概念一知半解,流程不深究没概念. 逻辑推理分析没形成习惯. 也没有正确的模型.
7.我从来不觉得我比别人差
8.进入状态比较慢, 
9.出了问题,,残存什么样的道理?  做啥动作? 为啥目的? 用啥材料? 用啥逻辑? 有啥方式?
10.怀疑一切,或者任何事我也可以做.
11.有点不认真,没有边学边思考,边推理. 效率不高,还返工,,,你有多成功,取决于你有多渴望成功.
12.目的是啥? 这就是此时的主体? 主体都搞不清楚? 容易困于某个点,此时的监控,感应通知等 ==>先找到主体,有个整体的认识,在去扣细节和辅助. 观察者
13.带着(目的是创建对象)的前提来看问题? 一切为了创建,  肯定有由创建过程. 也可以顺着目的,逻辑推理 每一步该怎么做?   建造者
14.抽象的概念描述不好理解,一定要结合实例 :一个复杂的对象(房子)由很多的子部件(黄沙，瓷砖，水泥，青砖)的组成，子部件(黄沙的品牌)是多变，但是子部件组成的流程确实不易变。 流程是啥呢?


一：建造者模式 是啥? 干啥用? 处于啥样的环境中? 在环境中处于啥位置?之前的认识不好?   样本:也就是构建对象嘛 正常不就new一下嘛, 为啥要专门提出来. 带着这样的目的和疑问,往下看?

案例:建造者的生活案例   建造房子呗  之前是懵懵的,毫无目的,毫无主线,无前提,无脉络 . 毫无关键点 也没主动. 啥都没有.  瞎转,当然心中没数了  错错错.
房子： 【种类:单元楼，别墅】  产品    不同的房子

组成部分：【黄沙，瓷砖，水泥，青砖】 元素   也就是说所有不同的房子的建造都是由这四个元素组成


黄沙的品牌：【多变】 特性  不同房子的建造中,元素是不同的.

流程: 类似于先打地基,后砌墙.在结顶.    本例 先黄沙,再瓷砖,再水泥,最后青砖. 流程不变

一个复杂的对象(房子)由很多的子部件(黄沙，瓷砖，水泥，青砖)的组成，子部件(黄沙的品牌)是多变，但是子部件组成的流程确实不易变。。  流程指的是啥? 子部件执行流程不变   抽象的概念不好理解,一定要结合实例

黄沙，瓷砖，水泥，青砖这四个部件可以组成各种产品 单元楼,或者别墅 也就是四个元素可以构建出不同的对象,也就是说每个对象必须有这四个元素
既然是一样的东西,我们可以把它抽象成接口或者抽象类 技巧

class 单元楼 {
  黄沙
  瓷砖
  水泥
  青砖
}

class 别墅 {
  黄沙
  瓷砖
  水泥
  青砖
}

二：大话设计模式 【人的构建】

人：【胖人，瘦人】

class person
{
头
身体
左手
右手
左脚
右脚
}

部件是多变的。。。组合在一块是不易变的。。。 如何理解不易变.?

步骤一:带着(目的是创建对象)的前提来看问题? 一切为了创建,  肯定有由创建过程. 也可以顺着目的,逻辑推理 每一步该怎么做?
1.先定义一个抽象类AbstractPerson类,定义CreateBody,CreateHand,CreateHead,CreateLeg方法,为什么要定义抽象类,四个部件方法? 人都是由这四个部件构成?
2.定义FatPerson和ThinPerson两个类继承AbstractPerson抽象类. 实现各自的四个部件方法?人都是由这四个部件构成?但每个人的部件方法不一样?也就是实现业务逻辑不一样
3.定义一个BuilderDirector类 也就是建造导演者,导演啥呢? 那种类,类如何执行也就是流程?    也就是创建复杂对象的一个方法  带着(目的是创建对象)的前提来看问题?
4.创建复杂对象的一种机制吧, 最终表示不同的人的类已经创建好了, 如何选择呢? 需要东西来决定也就是BuilderDirector类,同时有个特性:部件的执行流程是不变的,所有要把执行流程上升的更高一层. 也就是由Builderdirector类来控制.  完美映射? 部件是多变的。。。组合在一块是不易变的
5.在main函数中调用。 带着(目的是创建对象)的前提来看问题?
6.建造者模式有个什么样的好处呢? 防止子部件执行流程被破坏,,如果执行流程在子类决定,有可能会出错,但此时不能出错.    关键点在流程不易变,也不能变,所有要控制
7.创建某一个复杂对象,必须要经历四个小部件,每个子类的四个小部件的实现逻辑不一样.

三：真实案例  【彩信发送.】


  助通(胖人)           联合维拓(瘦人)


======    AbstractMMS ======  

createProductName

createProductLink

createTaoCommand

createSign


======   ZhutongMMS ======     MMSContent [Java]

createProductName

createProductLink

createTaoCommand

createSign


======  LianheweituoMMS  ======   ZipFile

createProductName

createProductLink

createTaoCommand

createSign


======  BuidlerDirector    ======  


1.建造者模式? 建造啥? 创建对象呗.,有啥不一样呢?  四个元素,流程不变
2.带着目的和疑问去思考.
3.抽象成接口或抽象类




  1. 0是什么状态? 怎么演绎? 1是什么状态? 过程遇到什么问题? 有什么样的解决方案?  VS 有什么方案? 解决什么问题?   在正常的流程的大前提下,去看问题, 关注点不能本末倒置.  脱离环境 咋理解呢?  目的是啥?
  2.如何演绎的? 第一步是啥?新需求? 如何执行新需求? 有什么问题? 对应有什么解决办法? 解决方法有没新名词? 解释新名词? 执行接下来的一步 ... 重复执行? 这需要细节?
  3.要搞清楚的东西:
		1.多调试,看看顺序执行,分支,跳转,循环等执行路径  多重分支,多级分支, 
		2.同步,异步执行路径  特别是异步没有wait时.
		3.锁执行路径
		为什么要弄清楚呢? 大体情况要了解,避免处于盲区,或者关注点错误.或者没有大前提.
4.如何理清脉络? 有哪些关键点? 如何做到这些关键点? 这些关键点是为了达到什么样的目的? 关键点如何串起来.? 也就是说小目的串起来,达到最终目的?做事是为了达到某些目的? 出了问题?也就是目的没达到,也就是做的事有问题. 先找到主体,有个整体的认识,在去扣细节和辅助.
5.避免,毫无目的,毫无主线,无前提,无脉络 . 毫无关键点 也没主动. 瞎转,当然心中没数了,生活中也是如此