终极问题：怎么样的状况，我自己去学东西时能有这效果呢？=》是不是缺少个对一个事情真正认识的例子，作为对比。或者说是一个渐变的过程，不是有一个招式就可以了=》也类似于，我到底要掌握什么样的能力，=》才能像优秀的人一样，才能做好每一件事呢。=》我们根本就没有逻辑过程这个意识。=》心中事先没有个预想的过程。=》=》消除一开始的慌，预想下，然后参考某个例子，去进行，也就是说要有某个模式，不可能我些什么都是从零开始的把=》我跟这个课程学习，就是按照作者的标准来行事，也就是学习一个高标准=》为什么跟他学好简单，自己学好难哦=》是不是模式有问题，=》这些根本就不够，预想了内容，但是我们能自我去实现这些内容吗？=》也就是不知道该怎么进行，有了逻辑过程的念头，那逻辑过程怎么推进，傻了眼
终极要求： 我不是靠着经验去做事的，去活的。  =》要用脑子去学，去做，去观察。
疑问： 为什么跟他学好简单，自己学好难哦=》是不是模式有问题，
问题：即便是跟着学习过一遍，还是独自没有仔细的走一遍逻辑过程

我怎么忘了之前是多么的优秀呢？
既然他没有很多新的概念，所以我就可以很快速的去完成，


问题6：这就是http协议vs 之前接触http协议是什么样子呢？http和request，根本就没关联起来，这说明了什么?=>当时的学习方式有问题，非常片面，不系统，导致只是简单了解下，对底层知识这种程度的了解 怎么能去学习更高层次的知识呢？



问题1:遇到channel，卡壳了， 怎么办？ 是影响情绪，影响进度，还是搞定它，=》channel有问题，说明之前的学习不成功了 rabbitmq架构图没有概念
问题2：网路IO
问题3：回环地址，防火墙

问题0：如果是我学些的话：看一篇文章，有实例的那种，也许会demo下，也许就收藏了，而且毫无感觉VS 有感觉得进行：先概况和本质，再安装，再管理，再详解配置文件，连接rabbitmq，=》他怎么就可以一步一步推进呢？

大家好，上节课给大家讲了rabbitmq的两个配置文件，
这节课给大家讲如何用C#如连接rabbitmq
我们看下官网

publish端代码
1.创建connection
问题1:遇到channel，卡壳了， 怎么办？ 是影响情绪，影响进度，还是搞定它，=》channel有问题，说明之前的学习不成功了 rabbitmq架构图没有概念
2.创建channel 
3. 定义交换机  当然你也可以不定义交换机，如果不定义交互机，它使用默认的交换机， 也就是direct，为了快速搭建，我们使用默认的，也就是不需要自己定义，相当于系统给你生成了一个，=》如何自己声明
4.创建一个队列
5.发布消息
 调试下，
 然后去ui中，看下， 发现队列和消息都已经有了，

  然后consumer端代码如何写呢? 你也需要创建一个connection，channel，队列可以不声明，然后直接从这个队列中取message，
  问题2：网路IO
因为这两个项目publish和consumer 肯定在多台机器下嘛，毕竟他是会走网络io的，
 1.创建connection
问题1:遇到channel，卡壳了， 怎么办？ 是影响情绪，影响进度，还是搞定它，=》channel有问题，说明之前的学习不成功了 rabbitmq架构图没有概念
2.创建channel 
3. 定义交换机  当然你也可以不定义交换机，如果不定义交互机，它使用默认的交换机， 也就是direct，为了快速搭建，我们使用默认的，也就是不需要自己定义，相当于系统给你生成了一个，=》如何自己声明
4.获取消息，有好几种，目前我们用最简单的，basicget 


调试下，


这样就实现了publish到consumer的一个简单的实现，

一：C# 连接rabbitmq。。。

.NET Client

1. api文档  类似msdn

2. 下载方式有两种： 《1》 通过官网下载  《2》 nuget下载


二：C# rabbitmq client
跟这个api文档 做去， guide文档
1. Connecting to a Broker

问题3：回环地址，防火墙
   首先要做服务器的配置， 默认guest是不可以被外网访问，在生产环境中，默认都是新增用户的。不用默认的guest。。。  回环地址  回路地址
   然后新增user 用户client访问使用

   然后如果访问不了，记得关闭防火墙。。
   
2. channel

            ConnectionFactory factory = new ConnectionFactory()
            {
                HostName = "192.168.23.145",
                UserName = "datamip",
                Password = "datamip",
				//其他的设置，用默认的，此处不设置，
            };

            //第一步：创建connection
            var connection = factory.CreateConnection();

            //第二步：创建一个channel
            var channel = connection.CreateModel();

            //第三步：申明交换机【因为rabbitmq已经有了自定义的ampq default exchange】

            //第四步：创建一个队列(queue)
            channel.QueueDeclare("mytest", true, false, false, null);

            var msg = Encoding.UTF8.GetBytes("你好"); //因为我们要生成byte数组

            //第五步：发布消息   发布消息都用basic前缀
            channel.BasicPublish(string.Empty, routingKey: "mytest", basicProperties: null, body: msg);


            //using。。。。
            //connection.Dispose();
            //channel.Dispose();
        }


Consumer代码： 

        static void Main(string[] args)
        {
            ConnectionFactory factory = new ConnectionFactory()
            {
                HostName = "192.168.23.145",
                UserName = "datamip",
                Password = "datamip",
            };

            //第一步：创建connection
            var connection = factory.CreateConnection();

            //第二步：创建一个channel
            var channel = connection.CreateModel();

            //第三步：申明交换机【因为rabbitmq已经有了自定义的ampq default exchange】

            //第四步：获取消息
            var result = channel.BasicGet("mytest", true);

            var msg = Encoding.UTF8.GetString(result.Body);//result中有好多东西，相当于message的存储，
        }


