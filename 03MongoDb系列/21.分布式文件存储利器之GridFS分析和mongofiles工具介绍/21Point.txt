所说,全部记录下来.没追求的话,都只是完成. 必须有效率.
有逻辑的全过程:现在问题是我和他学,但最终是我要用,如果用我该如何运用的角度.来学习? 可以不.不要变成为了学而学?
同样不是为了模仿，而是学习技巧，最好自己也能总结出技巧来。
目前仅仅是模仿,不仅仅是全盘接受,做到心中有概念,它也是有错的,翻译有问题?
最终还是要自己来做,来试, 要慢慢从被动吸收,到主动吸收转换.

效率要提升起来,不然时间太慢了. 找找哪里费时间了.
记录(有时还会重新看)+看手机,看新闻,其实看的时候很投入可以节省时间.


此模型,一连串逻辑上的运用的意识还没有形成. 不仅仅单个点, 要面对的是一大坨问题呢?
0.心中有数(整体上的前因后果,大体的脉络,或者概念上的认识),掌握主动,
	   1.有逻辑
	   2.有技巧=>范围,目标,关注点,关键点,注意力集中,排除干扰因素,拒绝深渊.
	   3.有效率=> 过程中,针对不断出现的情况,运用上面的方式,不断破击,不断改进.
	   4.其他的都是反面案例,不可取.=>目前不是时刻都处在正确的状态,所以要试试调整. =>直至成为习惯


先来个概述:
一：GridFS => Grid File System  + 结合sharding=> 分布式的文件系统 是啥? 这么高大上?

    TFS => Taobao File System...  

    HDFS => Hadoop File System...


分布式存储天然具有哪些功效： 1. 多机器存储，备份。。。

						   2. 可以突破一般文件系统对 files的限制。。。
                    
						   3. 分段存储，不像普通的file system 整个存储。。。 读文件时,要把整个文件加载的内存中.

关键:GridFS is a specification for storing and retrieving files that exceed the BSON-document size limit of 16 MB.


介绍完分布式存储,,试一把 
二： 通过mongodfiles 导入一个file【video，img】来进行测试。。。


1. mongofiles。。


2. 我们各自语言的驱动来实现。。 C#/Java/nodejs



   mongofiles <options> <commands> <filename>


   --host 

  mongodb做到一个绝对的内网环境。。。 不设置--username  --password 


3. --db <database>, -d <database>

   也就是说我们的file放到哪一个db中去。。。 
   也就是说 和之前添加的docment一样,只不过bson换成了file =>这里差点都犯了之前的错误,粗略的看到db,根本就没思考,也没联想到之前的学习, 浏览式认识.
   但只是概念上的认识,具体如何存储的呢?=>还是docment形式存储.=.这是个问题? 要深究.
   仅仅是接收,根本没有逻辑上的认识,不要应该想到,Mongodb都是以bson形式存在, file当然不例外? 看来分布式文件系统也是深渊?
   也说明掌握不够深刻, 或者还仅仅孤零零的点,没有串起来.

   如何做到这样的学习效果呢,在脱离他呢?

3. --local <filename>, -l <filename>


操作列表：【CURD】

list <prefix>

search <string>

put <filename>

get <filename>

get_id "<ObjectId>"

delete <filename>

delete_id "<ObjectId>"

上述的这些option command等命令行操作, 我怎么自己看着看不下去呢? 也就是看看,就止步了  顺着他看,有点理解呢?
一步懵逼,紧接着一步懵逼, 最后全懵逼了.  是不是看到了深渊.  深渊如何发生的呢?
有深渊,哪能心中有谱呢?  心中没谱的话,还能咋用呢?咋解决问题呢?

不要习以为常,自己所见到的,所知道的, 都是表面,不是全部,不是最本质的. 片面的具体体现.




命令行操作呀  就问现在还怕不? 会不? 

实操:
[root@localhost bin]# ./mongofiles -d records put jobs.exe
2016-07-23T21:45:28.257-0700	connected to: localhost
added file: ./jobs.exe


也就是说
 文件存储原理是什么? 为什么要这样设计呢?
当你导入file的时候，grid会在指定的db上面生成两个collection

1. fs.chuncks  看着就懵逼,应该体会不出啥意思?  为啥?

   memcache，其实里面有一个chunck。。。 大小是255字节  字节流的概念?  缺失.


2. fs.files  看着就懵逼,应该体会不出啥意思?  为啥?
   
   记录了job.exe 的简要信息。。。

50.7 M 用了 204 chunck 【本质上分段存储】 有没借鉴呢?


1.gridFS文件系统
2.分布式文件系统的概念
3.mongodbfiles使用,
4.mongofiles <options> <commands> <filename>的学习,如何掌握
5.文件存储的原理. 如何理解?
6.




   评价:仅仅是单个点理解了,
掌握的方法:有逻辑的分析,有逻辑的理解.
掌握的标准:是否心中有概念?什么是心中有概念? 前因后果,有逻辑的推演整个过程.
掌握的技巧: 1.不要太关注,难或易,不然就陷入被动了,任何事都要主动.(想到任何事的相应的主动状态.)
           2.遇到新知识，大量不懂的概念？怎么办？ =》存在浏览式，完成任务？为什么呢？不懂的心理 驱使快速完成来安慰自己。
		   3.遇到理解卡壳，怎么办？
		   4.遇到不知所措，怎么办？
		   5.关注负面的东西,着眼于美好的东西.
是否复习：