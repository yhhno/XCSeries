不是说安装完成后 执行Memcached -u root 就完成了,还有一些工作要做

一：配置参数

1. memcache 是没有配置文件的，所以我们再启动的时候增加参数。。。

   有些人可能就会问了，如果不配置参数，会怎么样？？？


二：在不配置参数的情况下，我们使用memcache


    为了方便，我们下载一个 C#版本的驱动。


1. 将大于1M的数据塞入到memcache中。。。可以塞入成功吗？？？   【redis，默认大小是512M】
   
   面对这么常见的一个需求，我们的memcache在默认的情况下都实现不了。。。大打折扣。。

配置参数： -v/vv/vvv  这个是查看log日志。

	   -I   value的配置大小【default：1M】 -I 5M

          settings.item_size_max = 1024 * 1024; /* The famous 1MB upper limit. */



2. 我们使用memcache，目的是什么？？？ 挡住web层的读。  8/2

   肯定需要缓存起来之后，这样才能挡住，这样的话，我们的memcache中需要尽可能多的合理数据。


3. 我们插入了1000条数据，每条数据大概在2.8M左右，我们发现，插入完成之后，我们的内存始终保持在63.2M附近，不会突破。

  《1》 memcache 的默认内存大小是分配多少呢？？？

        分配多少，我们可以看源代码。   settings.maxbytes = 64 * 1024 * 1024; /* default is 64MB */

         -m   指定内存大小

memcached.c 是我们的memcache的入口函数。

0.要检查使用的效果? 检验目的是否有效?
1.启动后,就是玩转memcached. 我们是专家,不是简单的使用者?
2.memcached没有配置文件? 那怎么配置呢? 启动后没办法配置? 那只有启动时配置?
3.既然是玩转memcached? 默认情况是什么? 如何修改默认情况呢? 可以修改那些配置? 如何配置? 有哪些配置参数? 为什么要修改默认的配置? 因为有新的需求,默认配置不能满足?
4.如果中间修改了配置, 没有呈现出效果怎么办? 不要懵? 要么配置错误?要么配置没起效? 要么客户端没感应到新修改? 要么就是插入没完成? 就去读了? eg. 微信页面没更新? 如何应对?
5.使用一个事?或者做一件事的目的是什么呢?使用memcached的目的是什么? 挡住web层的读?  一个web应用的读写比例 8/2.
6.如何挡住web层的读?怎么做? 把要读的东西缓存起来?  合理数据? 请求的和缓存的尽可能吻合? 如何合理? 如何检查挡的效果?
7.memcached添加缓存数据和对象的 有压缩算法? 压缩后再存? 如何感受压缩?添加过程还有通信过程? 因为分布式? 如何感受通信?谁和谁通信? 如何通信?
8.memcache添加1000m的数据? memcached进程占有的内存还是60多m,期望应该是1000m 这就有一个问题? 是存储了一部分,还是全部都丢失了?存储一部分的话? 是否有默认大小呢? 查看源代码?
9.memcached是如何保存数据的? memcached
